=======================================================================
$Id$
=======================================================================


IMPORTANT NOTE:
This Document is "work in progress" and not completed !


/**********************************************************************
Torrentflux-b4rt 1.0 README file
**********************************************************************/

	Contents:
	=========
	1. Introduction
	2. Features
	3. Requirements
		3.1 Minimum Requirements
		3.2 Additional/Optional Feature Requirements
		3.3 Fluxd Requirements
	4. Installation
	5. Support



/**********************************************************************
1. Introduction
**********************************************************************/

	Torrentflux-b4rt is a web based transfer control client.
	Torrentflux-b4rt allows you to control your bittorrent transfers
	from anywhere using a highly configurable web based front end.

	Torrentflux-b4rt is very easy to install on a web server and includes
	a simple setup script which can be accessed from a web browser.
	Just upload the files to your web server, run the setup script and
	your torrentflux-b4rt installation is ready to go.

	Torrentflux-b4rt was originally based on the TorrentFlux BitTorrent
	controller written by Qrome, although has recently undergone a major
	rewrite to allow transparent integration with a number of transfer
	clients and protocols:

	Torrentflux-b4rt has builtin support for transfers via:

		o BitTorrent - supported client(s) include:

			* Original BitTorrent/Mainline - supports trackerless
			  torrents and encryption

			* BitTornado - uses slightly less resources than the original
			  BT, allows file priority for downloading files selectively

			* Transmission - much smaller memory footprint without much
			  loss in functionality

		o HTTP/FTP - supported client(s) include:

			* wget - standard lightweight file transfer utility on
			  Linux, supported on many other platforms also

		o Usenet - supported client(s) include:

			* nzbperl - perl based application allowing multi-connection
			  news server downloads from nzb files with functionality
			  for bandwidth throttling.


	Torrentflux-b4rt incorporates a huge number of advanced options to
	allow you finer grained control of your transfers. The
	administration panel in torrentflux-b4rt includes a large number of
	options to allow you fine grained control over every aspect of your
	bittorrent/transfers usage.

	Torrentflux-b4rt is also a multi-user application, allowing you to
	create individual accounts and assign restrictions to those accounts
	as you wish.



/**********************************************************************
2. Features
**********************************************************************/

	Some of the most popular features of torrentflux-b4rt are listed
	below.

	o Supports various internet transfer protocols, including:

		- BitTorrent - supported client(s) include:

			* Original BitTorrent/Mainline - supports trackerless
			  torrents and encryption

			* BitTornado - uses slightly less resources than the original
			  BT, allows file priority for downloading files selectively

			* Transmission - much smaller memory footprint without much
			  loss in functionality

		- HTTP/FTP - supported client(s) include:

			* wget - standard lightweight file transfer utility on
			  Linux, supported on many other platforms also

		- Usenet - supported client(s) include:

			* nzbperl - perl based application allowing multi-connection
			  news server downloads from nzb files with functionality
			  for bandwidth throttling.

	o Unified Transfer control:

		- Perform stop/start/resume/kill/delete operations on individual
		  transfers, all transfers or a selection of transfers

        - Changes Settings of running transfers on the fly - down/up
		  rates, what ratio to stop seeding at, how many connections to
		  use at same time, ...

	o Transfer statistics and logging:

		- View detailed Transfer statistics and information, including:

			o per transfer error logging for easy troubleshooting
			o upload/download totals for each user, by day/month/year
			o number of seeders/leechers for a torrent in a graphical
			  display

	o Uploading and injection of metafiles (.torrent, .wget, .nzb files):

		- upload single or multiple metafiles from your local machine
		  to the web server

		- upload metafiles directly to your web server from another
		  web server

        - multiple operations in "fluxcli.php" allow inject and more
          from command-line (cron, etc.)
          eg.: "inject", "watch", "rss"

	o fluxcli.php - essentially a complete command-line version of
	  torrentflux-b4rt!

		- As mentioned, can perform all the tasks available in the
		  torrentflux-b4rt frontend but from the commandline.  Makes it
		  ideal for running from a cron job.

		- Schedule cron jobs to check RSS feeds on a regular basis and
		  download them to a directory.

		- Schedule cron jobs to watch folders for new torrent files and
		  then autostart/inject them

		- Check up on the status of transfers directly from a Unix shell

	o Fluxd - background perl daemon toperform scheduled tasks

		- automate fetching of torrent files from RSS feeds

		- watch a list of directories for new upload of torrent files
		  and automatically start those torrents running

	o Integrated Filemanager

		- Support for a large number of additional third party
		  utilities/functionality, including:

			* archive file extraction from the browser (zip/rar)

			* vlc streaming controllable from browser

			* download of completed transfers directly from browser

			* reading of .nfo files directly in the browser

			* creation of torrent files directly in the browser

	o Web: AJAX updates for maximum info with minimal bandwidth

		- Display of transfer lists can be easily configured to use AJAX
		  to update transfer stats in real time.  This saves on
		  bandwidth since only the transfer list needs to be sent across
		  the network, not the whole web page.

		- Individual transfer windows can also use AJAX to update stats
		  in real time.

	o Web: Templating Engine

		- the torrentflux-b4rt GUI is template driven using the vLib
		  template engine:

			http://vlib.clausvb.de/vlibtemplate.php

		  This allows developers to completely redesign the look and
		  feel of torrentflux-b4rt without having to worry about the
		  underlying PHP codebase.

		- Torrentflux-b4rt also incorporates template caching to speed
		  up the load time of pages.  This feature can be enabled via
		  the Administration control panel.




/**********************************************************************
3. Requirements
**********************************************************************/

	Due to the extensible nature of torrentflux-b4rt, there are a
	variety of 3rd party tools/utilities and extra functionality that
	can be enabled from within the administration control panel.
	Torrentflux-b4rt also features a service daemon called Fluxd which
	can be used to schedule rss feed downloads, keep watch over running
	torrents and restart them if they die.

	The 3rd party utils/functionality and Fluxd all have their own
	requirements.  For this reason the requirements section is split
	into the following sections:

		3.1 Minimum Requirements
		3.2 Additional/Optional Feature Requirements
		3.3 Fluxd Requirements

	ALWAYS install the required items from the package installation
	manager for your OS whenever possible.  This will save a lot of time
	and headaches, and ensure all the dependencies are installed
	correctly. See your OS documentation for details about the software
	management systems available on your OS.


/**********************************************************************
3.1 Minimum Requirements
**********************************************************************/

	This section lists the minimum requirements required to operate
	torrentflux-b4rt with the basic core functionality.  This list may
	seem daunting, but most Unix like OSs have many of these features
	available as part of their software distribution system.

	/******************************************************************
	Notes:
	=====

	- The following lists are NOT exhaustive - if you use a Unix like
	  OS/webserver/database/etc not listed below, basic functionality of
	  torrentflux-b4rt may well work.  Success reports installing
	  torrentflux-b4rt on other OSs other than those below above are
	  welcome on the forum:

			http://tf-b4rt.berlios.de/forum/

	- IT IS STRONGLY ADVISED THAT YOU INSTALL THE COMPONENTS LISTED
	  BELOW FROM THE SOFTWARE DISTRIBUTION SYSTEM INCLUDED WITH YOUR OS
	  (ie apt-get, rpm package management, FreeBSD ports system, etc).
	******************************************************************/


	The core minimum requirements follow below:

	o A Unix like OS (no Win32 support).
	  Current tested OSs include:

		* Linux:
			o Debian, Ubuntu, Gentoo, RedHat, Fedora, NSLU2,
			  ClarkConnect - amonst others

			Note:
			=====
			SELinux should be turned off.

		* BSD:
			o FreeBSD, OpenBSD, NetBSD

		* Apple:
			o Mac OS X


	o A Web Server.
	  Current tested webservers include:

		* Apache
			http://www.apache.org/

		* LightTPD
			http://www.lighttpd.net/


	o An SQL-Database.
	  Currently Supported databases:

		* MySQL
			http://www.mysql.com/

		* SQLite
			http://www.sqlite.org/

		* PostgreSQL
			http://www.postgresql.org/


	o PHP in 'web mode' (ie mod_php or php-cgi - preferably mod_php) >=
	  4.3.x built with database (MySQL, SQLite or PostgreSQL), session
	  and PCRE support enabled.

	o PHP in 'commandline mode' (php-cli) >= 4.3.x built with database
	  (MySQL, SQLite or PostgreSQL), session, sockets and PCRE support
	  enabled.

		http://www.php.net/

		PHP Notes:
		==========
		o Safe Mode must be turned off:
			* php.ini: safe_mode = Off

		o Allow Url fopen must be allowed:
			* php.ini: allow_url_fopen = On

		o As mentioned above, both the PHP web module and the
		  commandline / cli binary must be installed, both with support
		  for the database you plan to use and with support for PCRE and
		  sessions.  Check the package management system
		  documentation/website for your OS for more info on installing
		  PHP with support for web and cli.


	o Python is required for the BitTorrent and BitTornado
	  bittorrent clients:

		* Python >= 2.2 for BitTornado
		* Python >= 2.4 for BitTorrent Mainline
		  (original 'BitTorrent client).


	o Perl >= 5.6 or higher for fluxd, nzbperl.pl, ttools.pl and
	  fluxpoller.pl.  See section 3.2 below for extra info.


	Once more(!), it is highly advisable to install these requirements
	using the recommended package management system for your OS.



/**********************************************************************
3.2 Additional/Optional Feature Requirements
**********************************************************************/

	The following is a list of additional requirements needed before
	enabling additional features and options in torrentflux-b4rt.  By
	default these options or features are disabled and can be enabled
	via the administration panel - please ensure the requirements are
	installed before enabling additional features.

	As mentioned above, it is strongly advised that these requirements
	are installed from your OS's software distribution system to ensure
	all dependencies are installed correctly.


	Additional/optional feature requirements follow below:

	o BitTorrent Mainline Client requirements:

		* PyCrypto (Python Cryptography Toolkit)
			http://sourceforge.net/projects/pycrypto/

		* Twisted Python libs
			http://twistedmatrix.com/trac/

			Note:
			=====
			Twisted also requires Zope Interface >=3.0.1
				http://www.zope.org/Products/ZopeInterface/

			see Twisted installation docs for more info.


	o wget transfer functionality requirements:
		* wget
			http://www.gnu.org/software/wget/


	o nzbperl.pl requirements:

		* UUDeview
			http://fpx.de/fp/Software/UUDeview/

		The following perl modules are also required for nzbperl:

		* IO::File
		* IO::Select
		* IO::Socket::INET
		* File::Basename
		* Getopt::Long
		* Cwd
		* XML::Simple
		* XML::DOM

		Optional nzbperl perl modules:

		* Threads
		* Thread::Queue


	o Archive (rar/zip) extraction functionality requirements:

		* unrar
			http://www.rarlab.com/rar/


	o SFV file integrity checking functionality requirements:

		* cksfv
			http://zakalwe.fi/~shd/foss/cksfv/


	o vlc streaming functionality requirements:
		* vlc
			http://www.videolan.org/


	o ttools.pl is an alternative BitTorrent metadata client that can be
	  enabled in the Administration panel.  It requires the following
	  module:

		* LWP::UserAgent   (perl -MCPAN -e "install LWP::UserAgent")

	o Mac OS X specific:

		o Compilation of Transmission on Mac OS X requirements:
			* Apple Developer Tools
				http://developer.apple.com/tools/

		o wget functionality on Mac OS X requirements:
			* wget
				http://www.statusq.org/images/wget.zip


/**********************************************************************
3.3 Fluxd Requirements
  **********************************************************************/

	The fluxd daemon works as part of torrentflux-b4rt to run in the
	background on your server performing various tasks that you
	schedule.  Fluxd is started from the Administration control panel -
	by default it is not running.

	Fluxd is written in the Perl scripting language and requires a
	number of perl modules to run.  In the following list, the perl
	command is given for you to install the corresponding module from
	CPAN.  HOWEVER, most of these modules should be available from your
	OS's package management system and it is strongly advised that you
	install the modules from there rather than directly using the perl
	CPAN system.

	The required perl modules are as follows:

	o Core fluxd functionality:

		* IO::Select       (perl -MCPAN -e "install IO::Select")
		* IO::Socket::UNIX (perl -MCPAN -e "install IO::Socket::UNIX")
		* IO::Socket::INET (perl -MCPAN -e "install IO::Socket::INET")
		* POSIX            (perl -MCPAN -e "install POSIX")

	IMPORTANT:
	==========
	Additionally, Fluxd uses a PHP based helper script called
	fluxcli.php and for this to run correctly the commandline (cli)
	version of PHP must be installed with the correct extensions
	(database, PCRE and session support).  See the notes above in
	section 3.1 for more information.


	o (Optional) Fluxd database connectivity using Perl DBI - Perl DBI
	  db connectivity is not required to run Fluxd.  The option exists
	  to enable perl DBI however in the Admin panel.  The following
	  modules are required to run Fluxd in Perl DBI mode:

	   * all database-types:
		 DBI              (perl -MCPAN -e "install Bundle::DBI")

	   * MySQL:
		 DBD::mysql       (perl -MCPAN -e "install DBD::mysql")

	   * SQLite:
		 DBD::SQLite      (perl -MCPAN -e "install DBD::SQLite")

	   * PostgreSQL:
		 DBD::Pg          (perl -MCPAN -e "install DBD::Pg")


	o (Optional) Fluxinet functionality requirements - Fluxinet allows
	  local unix domain socket connections to Fluxd and is not enabled
	  by default:

	   * IO::Select       (perl -MCPAN -e "install IO::Select")

	   * IO::Socket::INET (perl -MCPAN -e "install IO::Socket::INET")



/**********************************************************************
4. Installation
**********************************************************************/

	Torrentflux-b4rt can be installed quickly from a web browser using
	the included setup script.  For full details of how to install
	torrentflux-b4rt manually, please see the INSTALL file.

	IMPORTANT:
	==========

	Before running the setup script, the torrentflux-b4rt files must be
	copied to the webserver 'document root' folder.  It is highly
	recommended that you do this as the 'root' user in a shell so that
	the permissions on your torrentflux-b4rt files can be set correctly
	for security and correct operation.  Login via SSH or telnet to your
	server and carry out the commands after running 'su'.

	It is possible to install torrentflux-b4rt without root access to
	your server - ie in a shared environment.  However be aware that
	running torrentflux-b4rt in a shared environment is not officially
	supported due to the large number of features that torrentflux-b4rt
	supports which require root or equivalent installation/configuration
	and maintenance.


	The installation guide follows below:

	1.	Download the latest torrentflux-b4rt distribution tarball from:

		http://tf-b4rt.berlios.de/downloads


		In a shell:

		# Change to a temporary directory, make sure it exists first!
		root@users /root# cd tmp

		# Use wget to download the tarball
		# (EXAMPLE ONLY, PLEASE USE THE URL ABOVE TO GET THE LATE SST TARBALL!):
		root@users /root/tmp# wget http://download.berlios.de/tf-b4rt/torrentflux-b4rt_1.0-alpha5.tar.bz2

		--12:23:20--  http://download.berlios.de/tf-b4rt/torrentflux-b4rt_1.0-alpha5.tar.bz2
		=> `torrentflux-b4rt_1.0-alpha5.tar.bz2'
		<snip>
		12:23:29 (212.19 KB/s) - `torrentflux-b4rt_1.0-alpha5.tar.bz2.1' saved [2038014/2038014]


	2.	Extract the distribution from the tarball in a temporary
		directory.


		In a shell:

		# Extracts the tarball into the temp directory
		# (EXAMPLE ONLY, CHECK THE NAME OF YOUR TARBALL!):
		root@users /root/tmp# tar jxvf torrentflux-b4rt_1.0-alpha5.tar.bz2
		torrentflux-b4rt_1.0-alpha5/
		torrentflux-b4rt_1.0-alpha5/sql/
		<snip>
		torrentflux-b4rt_1.0-alpha5/misc/check/
		torrentflux-b4rt_1.0-alpha5/misc/check/check_1.0.php


	3.	Copy the contents of the "html" folder into your web site
		directory (docroot).


		In a shell:

		# Change to the extracted tarball's directory:
		root@users /root/tmp# cd torrentflux-b4rt_1.0-alpha5

		# Recursively copy the contents of the 'html' folder to a folder
		# under your website docroot:
		root@users /root/tmp/torrentflux-b4rt_1.0-alpha5# cp -R html /var/www/html/tfb


	4.	Ensure the files and directories in the tfb directory under your
		website docroot are readable by the webserver user.


		In a shell:

		# Change to the docroot/tfb directory:
		root@users /root/tmp/torrentflux-b4rt_1.0-alpha5# cd /var/www/html/tfb

		# Change the ownership of all files under /var/www/html/tfb to
		# that of the user 'www'.  Change 'www' to the user your
		# webserver runs as:
		root@users /var/www/html/tfb# chown -R www:www /var/www/html/tfb



	5.	Ensure the "inc/config/" directory under your docroot/tfb is
		writable by the webserver user and not accessible by others.


		In a shell:

		# Change ownership of inc/config/ so the 'user' group has write
		# access and the 'other' group has neither read, write nor
		# execute access:
		root@users /var/www/html/tfb# chmod u+w,o-rwx inc/config/


	6.	Finally, open "setup.php" in a web browser and complete it step
		by step.


		In a browser, browse to:

		http://example.com/tfb/setup.php



	IMPORTANT: LOGIN TO YOUR torrentflux-b4rt INSTALLATION IMMEDIATELY
	==================================================================

	The first time you login/access the application, you will be
	prompted for a username and password.  This user/pass pair will be
	for the SUPERADMIN user on your installation of torrentflux-b4rt.
	If someone else browses to your torrentflux-b4rt installation before
	you, they will be able to create a superadmin user and effectively
	'own' your torrentflux-b4rt installation which is not a good thing.

	On your first login you should check all the admin settings pages
	and configure your installation.  Take the time to go through the
	options there to enable any features you require.



/**********************************************************************
5. Support
**********************************************************************/

	For support with your torrentflux-b4rt installation please see the
	torrentflux-b4rt forum:

		http://tf-b4rt.berlios.de/forum/

	Please take the time to search the forum first for a solution to your
	problem.  If you still can't find the solution after searching, please
	leave a clear and concise subject/message:

	1.	Ensure the subject of your message takes the format:

			[torrentflux-b4rt-VersionXXX] Description

		where:

			VersionXXX is the version of torrentflux-b4rt you are
			running
			- ie 1.0-alpha5.

			and

			Description gives a concise description of your problem.
			A message with a subject of 'HELP!!!' is NOT a good subject
			and is likely to be ignored.

		For example, a good subject for a message would be something
		like:

		[torrentflux-b4rt-alpha5] Transfers fail to start when template
		caching enabled


	2.	Ensure the content of your message describes:

		a.	Your working environment if relevant

			- ie OS, PHP/DB/Python/etc

			(if in doubt, always include this info!)

		b.	A clear and concise description of what the problem is, what
			you did to see the problem and any additional info that you
			think might be relevant to helping us help you fix the
			problem.


			IMPORTANT:
			==========

			Most useful of all are the torrentflux-b4rt logfiles for
			troubleshooting.  Always check these logfiles first and
			ALWAYS post the relevant info from them when posting on the
			forum!:

			- transfer logfiles - click on the logfile icon in the
			  transfer list to view the transfer logfiles

			- fluxd logfiles - the fluxd logs are located in the
			  Administration section for fluxd, one for fluxd general
			  messages and one for fluxd errors.  Check both of these
			  when troubleshooting fluxd problems.


		c.	What steps can be taken to reproduce the problem - this is
			useful to help others test your problem out.

		d.	A suggested fix for the problem if you think this is a bug -
			these kind of posts are always welcome!!!

			Please be very careful however before labeling something a
			'bug' before you are absolutely positive it is!


	3.	This is probably one of the most obvious important factors when
		asking a question on a technical forum but is surprisingly
		overlooked very often:

		MAKE SURE YOU ACTUALLY ASK A QUESTION!

		It's surprising how often people rock up on a forum with the
		intention of getting help, but they don't actually ask a
		question and only provide a load of information that leaves
		potential helpers thinking 'And.... the question is...?'!

		Also make sure you ask a question that doesn't just require a
		yes/no answer.  Before you actually submit the post, use the
		'Preview' feature to read over your message and check that any
		questions you ask won't be simple 'yes/no' answers (unless of
		course that's all you want!).


	Finally, PLEASE PLEASE PLEASE take the time to read the following
	document if you plan on asking a question on the forum. This is
	recommended reading for all levels of users who wish to get help on
	a technical forum:

		http://catb.org/~esr/faqs/smart-questions.html


	TODO: Add alternative options for support - ie superadmin/updates section?
