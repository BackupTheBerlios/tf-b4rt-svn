
[dir]
docroot = /var/www
pathTf = /usr/local/torrentflux
pathFluxd = /usr/local/torrentflux/.fluxd

[file]
php = /usr/bin/php
log = /usr/local/torrentflux/.fluxd/fluxd.log
pid = /usr/local/torrentflux/.fluxd/fluxd.pid
cfg = /var/www/bin/fluxd/fluxd.cfg

[logging]
LoggerFactoryPackage = fluxd.logging.LoggerFactory
LoggerFactory = LoggerFactoryFile
Level = DEBUG
Dateformat = %Y/%m/%d - %H:%M:%S

[database]
DataAdapterPackage = fluxd.database.DataAdapter
DataAdapter = DataAdapterFluxcli

[server]
Servers = ServerUnixSocket, ServerInetSocket

[ServerUnixSocket]
enabled = True
module = fluxd.server.Server.ServerUnixSocket
class = ServerUnixSocket
path = /usr/local/torrentflux/.fluxd/fluxd.sock

[ServerInetSocket]
enabled = False
module = fluxd.server.Server.ServerInetSocket
class = ServerInetSocket
host = auto
port = 45454

[modules]
Modules = Dummy, Maintenance, Rssad, Watch, Trigger

[Dummy]
enabled = False
module = fluxd.modules.Modules.Dummy
class = Dummy

[Maintenance]
enabled = True
module = fluxd.modules.Modules.Maintenance
class = Maintenance
interval = DB:fluxd_Maintenance_interval
restart = DB:fluxd_Maintenance_trestart

[Rssad]
enabled = True
module = fluxd.modules.Modules.Rssad
class = Rssad
interval = DB:fluxd_Rssad_interval
jobs = DB:fluxd_Rssad_jobs

[Watch]
enabled = True
module = fluxd.modules.Modules.Watch
class = Watch
interval = DB:fluxd_Watch_interval
jobs = DB:fluxd_Watch_jobs

[Trigger]
enabled = False
module = fluxd.modules.Modules.Trigger
class = Trigger
interval = DB:fluxd_Trigger_interval
cmd-OnDownloadCompleted = echo "[${TFB_CURDATE}]" Transfer "${TFB_TRANSFER}" completed for user "${TFB_OWNER}" >> "${TFB_FLUXD}transfers.log"
cmd-OnSeedingStopped = echo "[${TFB_CURDATE}]" Transfer "${TFB_TRANSFER}" stopped for user "${TFB_OWNER}" >> "${TFB_FLUXD}transfers.log"
